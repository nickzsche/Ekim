{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/AOM/Desktop/Baran%20Proje/EkimSogutma/teklif-formu/src/lib/projects.ts"],"sourcesContent":["// Basit dosya tabanlı (JSON) proje kaydı (ileride DB'ye taşınabilir)\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport type ProjectProduct = {\r\n  productId: number;\r\n  quantity: number;\r\n  discount: number;\r\n  margin: number;\r\n};\r\n\r\nexport type Project = {\r\n  id: number;\r\n  name: string;\r\n  products: ProjectProduct[];\r\n};\r\n\r\nconst projectsFile = path.join(process.cwd(), 'data', 'projects.json');\r\n\r\nexport function getAllProjects(): Project[] {\r\n  if (!fs.existsSync(projectsFile)) return [];\r\n  const raw = fs.readFileSync(projectsFile, 'utf-8');\r\n  return JSON.parse(raw);\r\n}\r\n\r\nexport function saveAllProjects(projects: Project[]) {\r\n  fs.writeFileSync(projectsFile, JSON.stringify(projects, null, 2), 'utf-8');\r\n}\r\n\r\nexport function addProject(name: string, products: ProjectProduct[]): Project {\r\n  const projects = getAllProjects();\r\n  const newProject: Project = {\r\n    id: Date.now(),\r\n    name,\r\n    products,\r\n  };\r\n  projects.push(newProject);\r\n  saveAllProjects(projects);\r\n  return newProject;\r\n}\r\n\r\nexport function getProjectById(id: number): Project | undefined {\r\n  return getAllProjects().find((p) => p.id === id);\r\n}\r\n"],"names":[],"mappings":"AAAA,qEAAqE;;;;;;;;;;;AACrE;AACA;;;AAeA,MAAM,eAAe,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ;AAE/C,SAAS;IACd,IAAI,CAAC,wGAAE,CAAC,UAAU,CAAC,eAAe,OAAO,EAAE;IAC3C,MAAM,MAAM,wGAAE,CAAC,YAAY,CAAC,cAAc;IAC1C,OAAO,KAAK,KAAK,CAAC;AACpB;AAEO,SAAS,gBAAgB,QAAmB;IACjD,wGAAE,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,CAAC,UAAU,MAAM,IAAI;AACpE;AAEO,SAAS,WAAW,IAAY,EAAE,QAA0B;IACjE,MAAM,WAAW;IACjB,MAAM,aAAsB;QAC1B,IAAI,KAAK,GAAG;QACZ;QACA;IACF;IACA,SAAS,IAAI,CAAC;IACd,gBAAgB;IAChB,OAAO;AACT;AAEO,SAAS,eAAe,EAAU;IACvC,OAAO,iBAAiB,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;AAC/C","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/AOM/Desktop/Baran%20Proje/EkimSogutma/teklif-formu/src/app/api/projects/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { getAllProjects, addProject, ProjectProduct } from '@/lib/projects';\r\n\r\nexport async function GET() {\r\n  // Tüm projeleri getir\r\n  const projects = getAllProjects();\r\n  return NextResponse.json(projects);\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  const { name, products } = await req.json();\r\n  if (!name || !Array.isArray(products)) {\r\n    return NextResponse.json({ error: 'Eksik veri' }, { status: 400 });\r\n  }\r\n  const newProject = addProject(name, products as ProjectProduct[]);\r\n  return NextResponse.json(newProject);\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,eAAe;IACpB,sBAAsB;IACtB,MAAM,WAAW,IAAA,6JAAc;IAC/B,OAAO,mKAAY,CAAC,IAAI,CAAC;AAC3B;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IACzC,IAAI,CAAC,QAAQ,CAAC,MAAM,OAAO,CAAC,WAAW;QACrC,OAAO,mKAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAa,GAAG;YAAE,QAAQ;QAAI;IAClE;IACA,MAAM,aAAa,IAAA,yJAAU,EAAC,MAAM;IACpC,OAAO,mKAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}