const Database = require('better-sqlite3');
const db = new Database('./data/products.db');

console.log('ðŸ“Š VERÄ°TABANI DURUMU');
console.log('==================');

// Kategorilere gÃ¶re Ã¼rÃ¼n sayÄ±sÄ±
const categories = db.prepare('SELECT category, COUNT(*) as count FROM products GROUP BY category').all();
console.log('\nðŸ“‚ Kategori baÅŸÄ±na Ã¼rÃ¼n sayÄ±sÄ±:');
categories.forEach(cat => {
  console.log(`${cat.category}: ${cat.count} Ã¼rÃ¼n`);
});

// Toplam Ã¼rÃ¼n sayÄ±sÄ±
const total = db.prepare('SELECT COUNT(*) as total FROM products').get();
console.log(`\nðŸ“¦ TOPLAM: ${total.total} Ã¼rÃ¼n`);

// Son eklenen Ã¼rÃ¼nler
const recent = db.prepare('SELECT name, price, category FROM products ORDER BY id DESC LIMIT 5').all();
console.log('\nðŸ†• Son eklenen 5 Ã¼rÃ¼n:');
recent.forEach((product, index) => {
  console.log(`${index + 1}. ${product.name} - â‚¬${product.price}`);
});

// Fiyat aralÄ±klarÄ±
const priceRanges = db.prepare(`
  SELECT 
    CASE 
      WHEN price < 100 THEN 'DÃ¼ÅŸÃ¼k (â‚¬0-100)'
      WHEN price < 500 THEN 'Orta (â‚¬100-500)'
      WHEN price < 1000 THEN 'YÃ¼ksek (â‚¬500-1000)'
      ELSE 'Premium (â‚¬1000+)'
    END as price_range,
    COUNT(*) as count
  FROM products 
  WHERE price IS NOT NULL 
  GROUP BY price_range
`).all();

console.log('\nðŸ’° Fiyat aralÄ±klarÄ±na gÃ¶re daÄŸÄ±lÄ±m:');
priceRanges.forEach(range => {
  console.log(`${range.price_range}: ${range.count} Ã¼rÃ¼n`);
});

db.close();
console.log('\nâœ… Rapor tamamlandÄ±!');